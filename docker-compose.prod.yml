services:
    nginx:
        image: nginx:stable
        volumes:
            - ./.docker/nginx/conf.d:/etc/nginx/conf.d
            - ./:/var/www
        ports:
            - '${APP_PORT:-80}:80'
        restart: always
        depends_on:
            app:
                condition: service_started
        container_name: nginx

    app:
        build:
            context: .
            dockerfile: .docker/app/Dockerfile
        volumes:
            - ./:/var/www
        environment:
            APP_NAME: ${APP_NAME}
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            APP_URL: ${APP_URL}

            DB_CONNECTION: ${DB_CONNECTION}
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_DATABASE: ${DB_DATABASE}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}

            REDIS_PASSWORD: ${REDIS_PASSWORD}

            AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
            AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
            AWS_BUCKET: ${AWS_BUCKET}
            AWS_ENDPOINT: ${AWS_ENDPOINT}

            RABBITMQ_HOST: ${RABBITMQ_HOST}
            RABBITMQ_VHOST: ${RABBITMQ_VHOST}
            RABBITMQ_USER: ${RABBITMQ_USER}
            RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}

            LOG_TELEGRAM_CHAT_ID: ${LOG_TELEGRAM_CHAT_ID}
            LOG_TELEGRAM_BOT_TOKEN: ${LOG_TELEGRAM_BOT_TOKEN}
            LOG_TELEGRAM_BOT_API: ${LOG_TELEGRAM_BOT_API}

            SENTRY_LARAVEL_DSN: ${SENTRY_LARAVEL_DSN}

            PHP_IDE_CONFIG: "serverName=mystore"
            XDEBUG_CONFIG: "idekey=PHPSTORM"
        ports:
            - '${VITE_PORT:-5173}:5173'
        depends_on:
            - db
        container_name: app

    db:
        image: postgres
        restart: always
        volumes:
            - db-pgsql:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        ports:
            - '${DB_PORT:-5432}:5432'
        container_name: db

    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080

    redis:
        image: redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        environment:
            REDIS_PASSWORD: ${REDIS_PASSWORD}
        container_name: redis

volumes:
    db-pgsql:
        driver: local
        name: "db_pgsql"
